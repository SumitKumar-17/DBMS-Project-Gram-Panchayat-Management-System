generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://avnadmin:AVNS_qGSA880d8yjyFdVi7mR@pg-3038332c-aviralavichal-cc4e.l.aivencloud.com:19808/defaultdb?sslmode=require"
}

model assets {
  asset_id          Int      @id @default(autoincrement())
  type              String   @db.VarChar(255)
  location          String   @db.VarChar(255)
  installation_date DateTime @db.Date
}

model census_data {
  household_id Int
  citizen_id   Int
  event_type   String     @db.VarChar(255)
  event_date   DateTime   @db.Date
  citizens     citizens   @relation(fields: [citizen_id], references: [citizen_id], onDelete: NoAction, onUpdate: NoAction)
  households   households @relation(fields: [household_id], references: [household_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([household_id, citizen_id, event_date])
}

model citizens {
  citizen_id                Int                    @id @default(autoincrement())
  name                      String                 @db.VarChar(255)
  gender                    String                 @db.VarChar(50)
  dob                       DateTime               @db.Date
  household_id              Int
  educational_qualification String                 @db.VarChar(255)
  email                     String                 @unique @db.VarChar(255)
  password                  String                 @db.VarChar(255)   
  census_data               census_data[]
  households                households             @relation(fields: [household_id], references: [household_id], onDelete: NoAction, onUpdate: NoAction)
  land_records              land_records[]
  panachayat_employees      panachayat_employees[]
  scheme_enrollments        scheme_enrollments[]
  vaccinations              vaccinations[]
}

model government_monitor {
  monitor_id Int    @id @default(autoincrement())
  email      String @unique @db.VarChar(255)
  password   String @db.VarChar(255)
}

model households {
  household_id Int           @id @default(autoincrement())
  address      String        @db.VarChar(255)
  income       Decimal       @db.Decimal(10, 2)
  census_data  census_data[]
  citizens     citizens[]
}

model land_records {
  land_id    Int      @id @default(autoincrement())
  citizen_id Int
  area_acres Decimal  @db.Decimal(10, 2)
  crop_type  String   @db.VarChar(255)
  citizens   citizens @relation(fields: [citizen_id], references: [citizen_id], onDelete: NoAction, onUpdate: NoAction)
}

model panachayat_employees {
  employee_id Int      @id @default(autoincrement())
  citizen_id  Int
  role        String   @db.VarChar(255)
  citizens    citizens @relation(fields: [citizen_id], references: [citizen_id], onDelete: NoAction, onUpdate: NoAction)
}

model scheme_enrollments {
  enrollment_id   Int             @id @default(autoincrement())
  citizen_id      Int
  scheme_id       Int
  enrollment_date DateTime        @db.Date
  citizens        citizens        @relation(fields: [citizen_id], references: [citizen_id], onDelete: NoAction, onUpdate: NoAction)
  welfare_schemes welfare_schemes @relation(fields: [scheme_id], references: [scheme_id], onDelete: NoAction, onUpdate: NoAction)
}

model vaccinations {
  vaccination_id    Int      @id @default(autoincrement())
  citizen_id        Int
  vaccine_type      String   @db.VarChar(255)
  date_administered DateTime @db.Date
  citizens          citizens @relation(fields: [citizen_id], references: [citizen_id], onDelete: NoAction, onUpdate: NoAction)
}

model welfare_schemes {
  scheme_id          Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  description        String
  scheme_enrollments scheme_enrollments[]
}
